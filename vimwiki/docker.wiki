= Docker =

https://hub.docker.com/

入门教程 https://docker_practice.gitee.io/

与 `CoreOS` 搭配更佳。如果需要升级，使用：

{{{sh
update_engine_client -update
}}}

然后重启完成升级。

CoreOS 需要 SELINUX，不然会有奇怪的错误。
{{{sh
vi /etc/selinux/config 

SELINUX=enforcing
}}}


=== 常用工具 ===

* portainer https://www.portainer.io/installation/
* ctop https://github.com/bcicen/ctop

=== 常用容器 ===

portainer:

{{{sh
docker volume create portainer_data
docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer
}}}

htop:

{{{sh
docker run -it --name=htop --pid=host jonbaldie/htop
docker run -it --rm --pid=container:XXX jonbaldie/htop
}}}

ctop:

{{{sh
docker run -it -v /var/run/docker.sock:/var/run/docker.sock:ro quay.io/vektorlab/ctop
}}}

nginx:

{{{sh
docker volume create www
docker run -p 8080:80 -v www:/usr/share/nginx/html:ro -d nginx:alpine
}}}

gogs:

{{{sh
docker pull gogs/gogs:0.11.86
docker volume create gogs
docker run -p 22:22 -p 3000:3000 gogs/gogs:0.11.86
}}}

/dev/mqueue:

{{{sh
docker run -it --ipc=host alpine sh

docker run -it --name=main alpine sh
docker run -it --ipc=container:main alpine sh
}}}

=== alpine gcc ===

{{{sh
apk add --no-cache gcc musl-dev
}}}

=== /opt/bin ===

可以把 docker 容器启动的工具放这里，如 `htop`, `ctop`

{{{sh
docker start -ia $(basename $0)
}}}


=== docker compose ===

把 nginx 和其它几个 web 服务放一起，例子：

{{{yaml
version: '3'
services:

  nginx:
    image: nginx:alpine
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
      - ./log:/var/log
      - ./nginx-conf.d:/etc/nginx/conf.d
    ports: 
      - "80:80"
      - "443:443"
    depends_on:
      - portainer
      - gogs
      - filebrowser
      - rancher

  portainer:
    image: portainer/portainer
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data

  gogs:
    image: gogs/gogs:0.11.86
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./gogs:/data
    ports: 
      - "22:22"

  filebrowser:
    image: filebrowser/filebrowser
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./filebrowser/srv:/srv
      - ./filebrowser/database.db:/database.db

  rancher:
    image: rancher/rancher:stable
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./rancher:/var/lib/rancher
}}}


附 nginx 相关配置：

{{{conf
upstream gogs {
    server gogs:3000;
    keepalive 64;
}

server {
    server_name  git.* gogs.*;
    #listen       80;
    listen       443 ssl http2;

    location / {
        proxy_pass http://gogs;
    }
}
}}}

{{{conf
upstream portainer {
    server portainer:9000;
    keepalive 64;
}

server {
    server_name  portainer.*;
    #listen       80;
    listen       443 ssl http2;

    # for websocket, do not ignore any line
    proxy_http_version 1.1;
    proxy_connect_timeout 2;
    proxy_read_timeout 300;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Connection "upgrade";
    proxy_set_header Upgrade $http_upgrade;

    location / {
        proxy_pass http://portainer;
    }
}
}}}
