Traefik

反向代理服务器，Docker 的好搭档，https://docs.traefik.io/ 。

有它了就可以自动发现 docker 中的各服务，不用自己搞 nginx 然后哼哧哼哧手动生成配置了。

这里使用 yaml 格式的配置文件举例，功能包括：

* 服务自动发现和不启用服务发现
* 启用 HTTPS 
* HTTP 自动跳转 HTTPS
* gzip
* 文件配置与 Docker labels 配置

配置举例，注意这里用了两个 compose，通过 networks 联通起来，traefik 应当有所有服务的网络联通能力，不然它发现了服务也会 Gateway timeout 错误。

==== docker-compose.yaml ====

{{{yaml
version: '3'

networks:
  n1:
    external:
      name: t_n1
  t_n2:
    external: true

services:

  traefik:
    image: traefik
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/home/certs
      - ./traefik:/etc/traefik
    ports: 
      - 80:80
      - 443:443
    labels:
      - traefik.enable=false
    networks:
      - default
      - n1
      - t_n2

  notice:
    image: lwzm/notice
    labels:
      - traefik.http.routers.n.rule=Host(`n.fufu.fun`)
      - traefik.http.routers.n.middlewares=gz@file
      - traefik.http.routers.n.tls=true

  whoami:
    image: containous/whoami
    labels:
      - traefik.http.routers.w.rule=Host(`whoami.fufu.fun`)
      - traefik.http.routers.w.middlewares=gz@file
      - traefik.http.routers.w.tls=true

  nb:
    image: lwzm/gophernotes
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./gophernotes:/home
    labels:
      - "traefik.http.routers.nb.middlewares=gz@file"
}}}

（配置的开头展示了定义外部网络的两种方法）

==== ../t/docker-compose.yaml ====

{{{yaml
version: '3'

networks:
  n1: {}
  n2: {}

services:
  s1:
    image: nginx:alpine
    networks:
      - n1
  s2:
    image: nginx:alpine
    networks:
      - n2
  s3:
    image: nginx:alpine
    networks:
      - n1
      - n2
}}}

==== traefik/traefik.yaml ====

{{{yaml
entryPoints:
  http:
    address: ":80"

  https:
    address: ":443"

api:
  dashboard: true

providers:
  file:
    filename: /etc/traefik/dynamic.yaml
    watch: true
  docker:
    defaultRule: "Host(`{{ normalize .Name }}.fufu.fun`)"
    swarmMode: false
}}}

==== traefik/traefik.yaml ====

{{{yaml
tls:
  certificates:
    - certFile: /home/certs/fufu.fun.crt
      keyFile:  /home/certs/fufu.fun.key

http:
  routers:
    api:
      rule: Host(`traefik.fufu.fun`)
      service: api@internal
      tls: {}
      middlewares:
        - gz
    https-force:
      rule: HostRegexp(`{_:.+}`)
      #rule: HostRegexp(`traefik.{_:.+}`)
      service: api@internal
      middlewares:
        - redirect-https

  middlewares:
    redirect-https:
      redirectScheme:
        scheme: https
    gz:
      compress: {}

}}}

=== 参考 ===

* https://docs.traefik.io/getting-started/configuration-overview/
* https://docs.traefik.io/reference/dynamic-configuration/docker/
* https://docs.traefik.io/https/tls/
